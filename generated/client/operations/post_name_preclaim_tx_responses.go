// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/generated/models"
)

// PostNamePreclaimTxReader is a Reader for the PostNamePreclaimTx structure.
type PostNamePreclaimTxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostNamePreclaimTxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostNamePreclaimTxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostNamePreclaimTxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostNamePreclaimTxNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostNamePreclaimTxOK creates a PostNamePreclaimTxOK with default headers values
func NewPostNamePreclaimTxOK() *PostNamePreclaimTxOK {
	return &PostNamePreclaimTxOK{}
}

/*PostNamePreclaimTxOK handles this case with default header values.

successful operation
*/
type PostNamePreclaimTxOK struct {
	Payload *models.NameCommitmentHash
}

func (o *PostNamePreclaimTxOK) Error() string {
	return fmt.Sprintf("[POST /name-preclaim-tx][%d] postNamePreclaimTxOK  %+v", 200, o.Payload)
}

func (o *PostNamePreclaimTxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NameCommitmentHash)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNamePreclaimTxBadRequest creates a PostNamePreclaimTxBadRequest with default headers values
func NewPostNamePreclaimTxBadRequest() *PostNamePreclaimTxBadRequest {
	return &PostNamePreclaimTxBadRequest{}
}

/*PostNamePreclaimTxBadRequest handles this case with default header values.

Name preclaim transaction validation error
*/
type PostNamePreclaimTxBadRequest struct {
	Payload *models.Error
}

func (o *PostNamePreclaimTxBadRequest) Error() string {
	return fmt.Sprintf("[POST /name-preclaim-tx][%d] postNamePreclaimTxBadRequest  %+v", 400, o.Payload)
}

func (o *PostNamePreclaimTxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNamePreclaimTxNotFound creates a PostNamePreclaimTxNotFound with default headers values
func NewPostNamePreclaimTxNotFound() *PostNamePreclaimTxNotFound {
	return &PostNamePreclaimTxNotFound{}
}

/*PostNamePreclaimTxNotFound handles this case with default header values.

Account not found error
*/
type PostNamePreclaimTxNotFound struct {
	Payload *models.Error
}

func (o *PostNamePreclaimTxNotFound) Error() string {
	return fmt.Sprintf("[POST /name-preclaim-tx][%d] postNamePreclaimTxNotFound  %+v", 404, o.Payload)
}

func (o *PostNamePreclaimTxNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
