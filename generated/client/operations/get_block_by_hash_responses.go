// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/generated/models"
)

// GetBlockByHashReader is a Reader for the GetBlockByHash structure.
type GetBlockByHashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBlockByHashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBlockByHashOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetBlockByHashBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetBlockByHashNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetBlockByHashOK creates a GetBlockByHashOK with default headers values
func NewGetBlockByHashOK() *GetBlockByHashOK {
	return &GetBlockByHashOK{}
}

/*GetBlockByHashOK handles this case with default header values.

The block being found
*/
type GetBlockByHashOK struct {
	Payload *models.GenericBlock
}

func (o *GetBlockByHashOK) Error() string {
	return fmt.Sprintf("[GET /block/hash/{hash}][%d] getBlockByHashOK  %+v", 200, o.Payload)
}

func (o *GetBlockByHashOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericBlock)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlockByHashBadRequest creates a GetBlockByHashBadRequest with default headers values
func NewGetBlockByHashBadRequest() *GetBlockByHashBadRequest {
	return &GetBlockByHashBadRequest{}
}

/*GetBlockByHashBadRequest handles this case with default header values.

Invalid hash
*/
type GetBlockByHashBadRequest struct {
	Payload *models.Error
}

func (o *GetBlockByHashBadRequest) Error() string {
	return fmt.Sprintf("[GET /block/hash/{hash}][%d] getBlockByHashBadRequest  %+v", 400, o.Payload)
}

func (o *GetBlockByHashBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlockByHashNotFound creates a GetBlockByHashNotFound with default headers values
func NewGetBlockByHashNotFound() *GetBlockByHashNotFound {
	return &GetBlockByHashNotFound{}
}

/*GetBlockByHashNotFound handles this case with default header values.

Block not found
*/
type GetBlockByHashNotFound struct {
	Payload *models.Error
}

func (o *GetBlockByHashNotFound) Error() string {
	return fmt.Sprintf("[GET /block/hash/{hash}][%d] getBlockByHashNotFound  %+v", 404, o.Payload)
}

func (o *GetBlockByHashNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
