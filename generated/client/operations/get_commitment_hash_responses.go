// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/generated/models"
)

// GetCommitmentHashReader is a Reader for the GetCommitmentHash structure.
type GetCommitmentHashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCommitmentHashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCommitmentHashOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCommitmentHashBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCommitmentHashOK creates a GetCommitmentHashOK with default headers values
func NewGetCommitmentHashOK() *GetCommitmentHashOK {
	return &GetCommitmentHashOK{}
}

/*GetCommitmentHashOK handles this case with default header values.

Calculated commitment hash
*/
type GetCommitmentHashOK struct {
	Payload *models.NameCommitmentHash
}

func (o *GetCommitmentHashOK) Error() string {
	return fmt.Sprintf("[GET /commitment-hash][%d] getCommitmentHashOK  %+v", 200, o.Payload)
}

func (o *GetCommitmentHashOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NameCommitmentHash)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommitmentHashBadRequest creates a GetCommitmentHashBadRequest with default headers values
func NewGetCommitmentHashBadRequest() *GetCommitmentHashBadRequest {
	return &GetCommitmentHashBadRequest{}
}

/*GetCommitmentHashBadRequest handles this case with default header values.

Name validation failed
*/
type GetCommitmentHashBadRequest struct {
	Payload *models.Error
}

func (o *GetCommitmentHashBadRequest) Error() string {
	return fmt.Sprintf("[GET /commitment-hash][%d] getCommitmentHashBadRequest  %+v", 400, o.Payload)
}

func (o *GetCommitmentHashBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
