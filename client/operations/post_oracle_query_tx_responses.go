// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/models"
)

// PostOracleQueryTxReader is a Reader for the PostOracleQueryTx structure.
type PostOracleQueryTxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOracleQueryTxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostOracleQueryTxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostOracleQueryTxNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostOracleQueryTxOK creates a PostOracleQueryTxOK with default headers values
func NewPostOracleQueryTxOK() *PostOracleQueryTxOK {
	return &PostOracleQueryTxOK{}
}

/*PostOracleQueryTxOK handles this case with default header values.

successful operation
*/
type PostOracleQueryTxOK struct {
	Payload *models.OracleQueryResponse
}

func (o *PostOracleQueryTxOK) Error() string {
	return fmt.Sprintf("[POST /oracle-query-tx][%d] postOracleQueryTxOK  %+v", 200, o.Payload)
}

func (o *PostOracleQueryTxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OracleQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOracleQueryTxNotFound creates a PostOracleQueryTxNotFound with default headers values
func NewPostOracleQueryTxNotFound() *PostOracleQueryTxNotFound {
	return &PostOracleQueryTxNotFound{}
}

/*PostOracleQueryTxNotFound handles this case with default header values.

Oracle query transaction validation error
*/
type PostOracleQueryTxNotFound struct {
	Payload *models.Error
}

func (o *PostOracleQueryTxNotFound) Error() string {
	return fmt.Sprintf("[POST /oracle-query-tx][%d] postOracleQueryTxNotFound  %+v", 404, o.Payload)
}

func (o *PostOracleQueryTxNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
