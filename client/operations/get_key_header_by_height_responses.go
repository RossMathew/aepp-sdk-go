// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/models"
)

// GetKeyHeaderByHeightReader is a Reader for the GetKeyHeaderByHeight structure.
type GetKeyHeaderByHeightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeyHeaderByHeightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetKeyHeaderByHeightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetKeyHeaderByHeightBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetKeyHeaderByHeightOK creates a GetKeyHeaderByHeightOK with default headers values
func NewGetKeyHeaderByHeightOK() *GetKeyHeaderByHeightOK {
	return &GetKeyHeaderByHeightOK{}
}

/*GetKeyHeaderByHeightOK handles this case with default header values.

The header found
*/
type GetKeyHeaderByHeightOK struct {
	Payload *models.Header
}

func (o *GetKeyHeaderByHeightOK) Error() string {
	return fmt.Sprintf("[GET /header-by-height][%d] getKeyHeaderByHeightOK  %+v", 200, o.Payload)
}

func (o *GetKeyHeaderByHeightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Header)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyHeaderByHeightBadRequest creates a GetKeyHeaderByHeightBadRequest with default headers values
func NewGetKeyHeaderByHeightBadRequest() *GetKeyHeaderByHeightBadRequest {
	return &GetKeyHeaderByHeightBadRequest{}
}

/*GetKeyHeaderByHeightBadRequest handles this case with default header values.

Header not found
*/
type GetKeyHeaderByHeightBadRequest struct {
	Payload *models.Error
}

func (o *GetKeyHeaderByHeightBadRequest) Error() string {
	return fmt.Sprintf("[GET /header-by-height][%d] getKeyHeaderByHeightBadRequest  %+v", 400, o.Payload)
}

func (o *GetKeyHeaderByHeightBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
