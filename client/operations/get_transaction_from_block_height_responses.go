// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/aeternity/aepp-sdk-go/models"
)

// GetTransactionFromBlockHeightReader is a Reader for the GetTransactionFromBlockHeight structure.
type GetTransactionFromBlockHeightReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTransactionFromBlockHeightReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTransactionFromBlockHeightOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetTransactionFromBlockHeightNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTransactionFromBlockHeightOK creates a GetTransactionFromBlockHeightOK with default headers values
func NewGetTransactionFromBlockHeightOK() *GetTransactionFromBlockHeightOK {
	return &GetTransactionFromBlockHeightOK{}
}

/*GetTransactionFromBlockHeightOK handles this case with default header values.

The transaction found
*/
type GetTransactionFromBlockHeightOK struct {
	Payload models.SingleTxObject
}

func (o *GetTransactionFromBlockHeightOK) Error() string {
	return fmt.Sprintf("[GET /block/tx/height/{height}/{tx_index}][%d] getTransactionFromBlockHeightOK  %+v", 200, o.Payload)
}

func (o *GetTransactionFromBlockHeightOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload as interface type
	payload, err := models.UnmarshalSingleTxObject(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewGetTransactionFromBlockHeightNotFound creates a GetTransactionFromBlockHeightNotFound with default headers values
func NewGetTransactionFromBlockHeightNotFound() *GetTransactionFromBlockHeightNotFound {
	return &GetTransactionFromBlockHeightNotFound{}
}

/*GetTransactionFromBlockHeightNotFound handles this case with default header values.

Block or transaction not found
*/
type GetTransactionFromBlockHeightNotFound struct {
	Payload *models.Error
}

func (o *GetTransactionFromBlockHeightNotFound) Error() string {
	return fmt.Sprintf("[GET /block/tx/height/{height}/{tx_index}][%d] getTransactionFromBlockHeightNotFound  %+v", 404, o.Payload)
}

func (o *GetTransactionFromBlockHeightNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
